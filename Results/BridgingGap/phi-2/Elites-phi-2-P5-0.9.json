{
    "0": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "1": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "2": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "3": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "4": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "5": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "6": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "7": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "8": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  ",
    "9": "  # TODO: Write your code hereimport jsonfrom abc import ABCMeta, abstractmethodclass Agent(metaclass=ABCMeta):      @abstractmethod      def __init__(self, name, age, gender):          pass      @abstractmethod      def getName(self):          pass      @abstractmethod      def getAge(self):          pass      @abstractmethod      def getGender(self):          pass      @abstractmethod      def getNeighbors(self, neighbors):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacencySetSize):          pass      @abstractmethod      def getAdjacencyVectorSize(self, adjacencyVectorSize):          pass      @abstractmethod      def getAdjacencyMatrix(self, adjacencyMatrix):          pass      @abstractmethod      def getAdjacencyList(self, adjacencyList):          pass      @abstractmethod      def getAdjacencySet(self, adjacencySet):          pass      @abstractmethod      def getAdjacencyVector(self, adjacencyVector):          pass      @abstractmethod      def getAdjacencyMatrixSize(self, adjacencyMatrixSize):          pass      @abstractmethod      def getAdjacencyListSize(self, adjacencyListSize):          pass      @abstractmethod      def getAdjacencySetSize(self, adjacency  "
}