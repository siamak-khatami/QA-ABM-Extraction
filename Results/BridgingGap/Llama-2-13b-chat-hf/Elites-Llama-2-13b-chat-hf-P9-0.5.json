{
    "0": "   Here is the extracted data for the 'percent-elites' variable in JSON format:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [0, 100], \"equation\": \"percent_elites = (100 - mu_activist_state) / (1 + exp(-(mu_activist_threshold - mu_activist_state) / 10))\", \"order_number\": 2, \"frequency\": \"every_time\" } } }Please note that the value boundaries for the 'percent-elites' variable are [0, 100], the equation is a function of the'mu_activist_state' and'mu_activist_threshold' variables, the order number is 2, and the frequency of execution is 'every_time'.  ",
    "1": "   Here is the extracted data in JSON format:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [0, 100], \"equation\": \"percent_elites = (100 - mu_activist_state) * (1 + zeal_elite)^(1/3)\", \"order_number\": 3, \"frequency\": \"every\" } } }Value Boundaries: [0, 100]Equation: percent_elites = (100 - mu_activist_state) * (1 + zeal_elite)^(1/3)Order Number: 3Frequency: every  ",
    "2": "   Here is the extracted data for the 'percent-elites' variable in JSON format:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [0, 10, 20, 30, 40, 50], \"equation\": \" = (100 * (elite_weight / (1 + peer_weight_g)))\", \"order_number\": 2, \"frequency\": 5 } } }Note: The value boundaries are represented as a list of integers from 0 to 50, with each integer representing a        10% increment in the percentage of elites. The equation is a simple formula that calculates the percentage        of elites based on the elite weight and peer weight. The order number indicates that this variable is calculated        second in the model, and the frequency represents how often this variable is updated during each        simulation run (in this case, every 5 time steps).  ",
    "3": "   Here is the extracted data for the 'percent-elites' variable of Model-level variables:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [0, 0.1, 0.2,..., 1], \"equation\": \" = (1 - mu_activist_state) * (1 - peer_weight_g) + mu_activist_state * (1 - peer_weight_g)\", \"order_number\": 2, \"frequency\": 5 } } }Please note that the value boundaries are represented as a list of values, and the equation is represented as a string. Also, the order number and frequency are integers.  ",
    "4": "   Here is the extracted data in JSON format:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [ -1.664, -10.418**, -11.492*** ], \"equation\": \" = (2.441) * (4.488) + (2.492) * (4.582) + (2.351) * (4.322) + (2.346) * (4.315) + (0.022) * (0.043) + (11.148**) * (11.209**) + (38.519***) * (38.642***)\", \"order_number\": 2, \"frequency\": \"Every Time Step\" } } }Please note that the value boundaries are represented using double asterisks for significance levels (e.g., **=p<0.01, ***=p<0.001), and the frequency of execution is represented as \"Every Time Step\".  ",
    "5": "  Please review the provided ABM text and extract the required information according to the specified request. Ensure          that the JSON object follows the requested structure and does not include any supplementary text.Please provide the extracted data in JSON format only.Here is the ABM text:(0.005) (0.009) advocate_weight_g -1.664 (-10.418**) (-11.492***) (2.441) (4.488) (4.366) elite_weight -1.876 (7.278) (9.048**) (2.492) (4.582) (4.301) general_weight -0.789 (-4.829) (2.397) (4.407) (4.301) percent_advocates -2.619 (0.043) (2.346) (4.315) advocate_zeal 2.647 (11.148**) (11.209**) (2.394) (4.401) (4.313) degrade_percent 0.022 (-0.686***) (-0.685***) (0.024) (0.045) (0.043) mu_activist_state 3.154 (-3.463) (2.511) (4.616) mu_activist_threshold -14.103*** (-1  ",
    "6": "   Here is the extracted data for the 'percent-elites' variable in JSON format:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [0, 0.1, 0.2,..., 1], \"equation\": \"= (1 - mu_activist_state) * (1 - peer_weight_g) + (mu_activist_state) * (1 - peer_weight_g)\", \"order_number\": 2, \"frequency\": 5 } } }Please note that the value boundaries are represented as a list of numbers, and the equation is represented as a string. Also, the order number and frequency are integers.  ",
    "7": "  {\"Model-Level\": {\"percent-elites\": {\"value_boundaries\": [0, 0.1, 0.2,..., 1],\"equation\": \"= (advocate_weight_g * peer_weight_g) + (elite_weight * general_weight)\",\"order_number\": 2,\"frequency\": \"every 10 time steps\"}}}Please note that the output should be in JSON format, and it should contain all the requested information.  ",
    "8": "   Here is the JSON object based on the provided ABM text:{\"Model-Level\": {\"percent-elites\": {\"value_boundaries\": [0, 100],\"equation\": \"percent_elites = (1 - mu_activist_state) * (1 - peer_weight_g) + mu_activist_state * (1 - peer_weight_g)\",\"order_number\": 2,\"frequency\": \"every 10 time steps\"}}}Please note that the 'value_boundaries' array contains the minimum and maximum possible values for the 'percent-elites' variable, which are 0 and 100, respectively. The 'equation' field represents the mathematical formula used to calculate the 'percent-elites' variable, and the 'order_number' field indicates the order in which the variables are executed. Finally, the 'frequency' field specifies how often the 'percent-elites' variable is updated during the simulation, which in this case is every 10 time steps.  ",
    "9": "   Here is the extracted data for the 'percent-elites' variable in JSON format:{ \"Model-Level\": { \"percent-elites\": { \"value_boundaries\": [0, 0.1, 0.2,..., 1], \"equation\": \"= (1 - mu_activist_state) * (1 - peer_weight_g) + mu_activist_state * (1 - peer_weight_g)\", \"order_number\": 2, \"frequency\": 5 } } }Note: The value boundaries are represented as a list of numbers between 0 and 1, and the equation is represented as a string. The order number represents the order in which the variables are executed, and the frequency represents how often the variable is updated during each iteration of the simulation.  "
}